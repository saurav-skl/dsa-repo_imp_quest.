
Inorder =>
    left =>root => right

PreOrder =>
    root => left => right

PostOrder =>
    left => right => root


1. Level order traversal

class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        queue<TreeNode*> q;
        q.push(root);
        q.push(NULL);
        vector<vector<int>> res;
        vector<int> level;
        if(root==NULL)
            return res;
        while(!q.empty()){
            TreeNode * dummy = q.front();
            q.pop();
            if(dummy==NULL){
                res.push_back(level);
                level.clear();
                if(!q.empty()){
                    q.push(NULL);
                }
            } else {
                level.push_back(dummy->val);
                if(dummy->left)
                    q.push(dummy->left);
                if(dummy->right)
                    q.push(dummy->right);
            }
        }
        return res;
    }
};

